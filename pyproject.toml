[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tidyxl"
version = "0.1.7"
description = "Import Excel files into tidy format with cell-level data extraction"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Wendi Wang", email = "wwd1015@gmail.com"},
]
maintainers = [
    {name = "Wendi Wang", email = "wwd1015@gmail.com"},
]
keywords = [
    "excel", "xlsx", "tidy", "data", "spreadsheet", "openpyxl", "pandas", 
    "data-analysis", "data-science", "cell-extraction"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Office Suites",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
requires-python = ">=3.12"
dependencies = [
    "openpyxl>=3.1.0",
    "pandas>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
"Homepage" = "https://github.com/yourusername/tidyxl"
"Bug Tracker" = "https://github.com/yourusername/tidyxl/issues"
"Documentation" = "https://github.com/yourusername/tidyxl#readme"
"Source Code" = "https://github.com/yourusername/tidyxl"
"Changelog" = "https://github.com/yourusername/tidyxl/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["tidyxl*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.setuptools.package-data]
tidyxl = ["py.typed"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["tidyxl"]
omit = ["tests/*", "examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["B011"]

[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = true
strict_equality = false
exclude = [
    "tests/.*",
    "examples/.*",
    "docs/.*"
]

[[tool.mypy.overrides]]
module = ["openpyxl.*"]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "mypy>=1.17.0",
    "pandas-stubs>=2.3.0.250703",
    "ruff>=0.12.7",
]
